name: output-firebase-build

#手動で実行
on:
  workflow_dispatch:
    inputs:
      # ビルド環境を選択
      variant:
        description: 'Choose build variant'
        required: true
        type: choice
        default: release
        options:
          - develop
          - release
      # ビルド環境を選択
      extension:
        description: 'Choose extension'
        required: true
        type: choice
        default: aab
        options:
          - aab
          - apk

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # 30分超えたら止める
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} #選択したブランチ
      #jdkのセットアップ
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      # Gradleの実行権限を付与
      - name: Make gradlew executable　
        run: chmod +x ./gradlew
      # keystoreのデコード
      - name: Decode Keystore
        if: ${{ github.event.inputs.variant == 'release' }}
        run: echo '${{ secrets.RELEASE_KEYSTORE_BASE64 }}' | base64 -d> release.jks
      # releaseビルド
      - name: Build With Gradle
        if: ${{ github.event.inputs.variant == 'release' }}
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        run: |
          if [ ${{github.event.inputs.extension}} == 'aab' ]; then
            ./gradlew bundleRelease
          else
            ./gradlew assembleRelease
          fi
      # developビルド
      - name: Build With Gradle (Develop)
        if: ${{ github.event.inputs.variant == 'develop' }}
        run: |
          if [ ${{github.event.inputs.extension}} == 'aab' ]; then
            ./gradlew bundleDebug
          else
            ./gradlew assembleDebug
          fi
      # aabファイルのパスを取得
      - name: Get apk path
        id: apk-path
        run: |
          if [ ${{github.event.inputs.extension}} == 'aab' ]; then
            path=$(find **/build/outputs/ -name '*.aab' -type f | head -1)
          else
            path=$(find **/build/outputs/ -name '*.apk' -type f | head -1)
          fi
          echo "path=$path" >> $GITHUB_ENV
      # Firebase App Distributionへのデプロイ
      - name: Deploy To Firebase App Distribution
        if: ${{ github.event.inputs.variant == 'develop' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{ secrets.FIREBASE_DEV_APP_ID }}
            serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
            groups: developer
            file: ${{ env.path }}
      # Slack通知
      - name: Send Slack Notification
        if: always() && (failure() || success())
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel" : ${{ secrets.SLACK_CHANNEL }},
              "text": "GithubActions[output-firebase-build]を実行しました。",
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                  "fields": [
                    {
                      "title": "ビルド結果",
                      "value": "${{ job.status == 'success' && ':white_check_mark:' || ':x:' }}${{ job.status }}",
                      "short": true
                    },
                    {
                      "title": "ビルド環境",
                      "value": "${{ github.event.inputs.variant }}",
                      "short": true
                    },
                  ]
                }
              ]
            }